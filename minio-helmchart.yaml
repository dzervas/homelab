---
apiVersion: v1
kind: Namespace
metadata:
  name: minio

---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: minio
  namespace: kube-system
  labels:
    logme: "true"
spec:
  chart: minio
  repo: https://charts.min.io/
  version: 5.0.13
  targetNamespace: minio
  valuesContent: |-
    mode: standalone # maybe distributed?
    persistence:
      enabled: true
      storageClass: longhorn
      size: 50Gi

    resources:
      requests:
        memory: 1Gi

    svcaccts:
    - user: loki
      accessKey: loki
      secretKey: loki
      policy:
        statements:
          - resources:
              - 'arn:aws:s3:::loki/*'
            actions:
              - "s3:ListBucket"
              - "s3:PutBucket"
              - "s3:GetObject"
              - "s3:DeleteObject"

    buckets:
    - name: loki-chunks
      policy: private
    - name: loki-ruler
      policy: private
    - name: loki-admin
      policy: private

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: "cert-manager/client-ca-certificate"
        nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      hosts:
        - s3.dzerv.art
      tls:
        - hosts:
            - s3.dzerv.art
          secretName: s3-k8s-dzervas-gr-cert

    consoleIngress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: "cert-manager/client-ca-certificate"
        nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      hosts:
        - console.s3.dzerv.art
      tls:
        - hosts:
            - console.s3.dzerv.art
          secretName: console-s3-k8s-dzervas-gr-cert

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-s3-access
  namespace: minio
spec:
  podSelector:
    matchLabels:
      app: minio
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: grafana
      podSelector:
        matchLabels:
          app.kubernetes.io/component: single-binary
  policyTypes:
  - Ingress
