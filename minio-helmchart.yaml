---
apiVersion: v1
kind: Namespace
metadata:
  name: minio

---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: minio
  namespace: kube-system
  labels:
    logme: "true"
spec:
  chart: minio
  repo: https://charts.min.io/
  version: 5.0.13
  targetNamespace: minio
  valuesContent: |-
    mode: distributed # maybe distributed?
    replicas: 2
    persistence:
      enabled: true
      storageClass: longhorn
      size: 50Gi

    networkPolicy:
      enabled: true

    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    postJob:
      securityContext:
        enabled: true

    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 2Gi

    users:
      - accessKey: console
        secretKey: console123
        policy: consoleAdmin
      - accessKey: loki
        secretKey: lokiloki
        policy: loki

    policies:
      - name: loki
        statements:
          - resources:
              - 'arn:aws:s3:::loki-*/*'
            actions:
              - "s3:ListBucket"
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:DeleteObject"

    buckets:
    - name: loki-chunks
      policy: private
    - name: loki-ruler
      policy: private
    - name: loki-admin
      policy: private

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: "cert-manager/client-ca-certificate"
        nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      hosts:
        - s3.dzerv.art
      tls:
        - hosts:
            - s3.dzerv.art
          secretName: s3-k8s-dzervas-gr-cert

    consoleIngress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: "cert-manager/client-ca-certificate"
        nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      hosts:
        - console.s3.dzerv.art
      tls:
        - hosts:
            - console.s3.dzerv.art
          secretName: console-s3-k8s-dzervas-gr-cert
