---
apiVersion: v1
kind: Namespace
metadata:
  name: elasticsearch
---

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: elasticsearch
  labels:
    logme: "true"
spec:
  version: 7.14.2
  nodeSets:
  - name: laz-local-path
    count: 1
    config:
      node.roles:
      - master
      - data
      - ingest
      node.store.allow_mmap: false
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/configuring-metricbeat.html
      xpack.monitoring.collection.enabled: true
      xpack.monitoring.elasticsearch.collection.enabled: false
    podTemplate:
      spec:
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 512Mi
              limits:
                memory: 2Gi
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
              storage: 512Mi
        storageClassName: local-path

  http:
    tls:
      selfSignedCertificate:
        disabled: true
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-data
  namespace: elasticsearch
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /cluster/elasticsearch-data
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 4M
  labels:
    use-http01-solver: "true"
  name: elasticsearch-ingress
  namespace: elasticsearch
spec:
  ingressClassName: nginx
  rules:
    - host: "laz.dzervas.gr"
      http:
        paths:
          - path: /elastic(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: elasticsearch-es-http
                port:
                  number: 9200
  tls:
    - hosts:
        - laz.dzervas.gr
      secretName: laz-dzervas-gr-cert
---

apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  namespace: elasticsearch
  labels:
    logme: "true"
spec:
  version: 7.14.2
  count: 1
  elasticsearchRef:
    name: elasticsearch
  config:
    # https://www.elastic.co/guide/en/kibana/current/monitoring-metricbeat.html
    xpack.monitoring.kibana.collection.enabled: false
    xpack.monitoring.collection.enabled: true
    # enable the UI to reflect container level CPU usage, only displays info if CPU limits are set on the monitored ES cluster
    # https://www.elastic.co/guide/en/kibana/current/monitoring-settings-kb.html
    xpack.monitoring.ui.container.elasticsearch.enabled: true
    server.publicBaseUrl: https://laz.dzervas.gr/kibana
    server.basePath: /kibana
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          limits:
            memory: 1Gi
            cpu: 1
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  secureSettings:
  - secretName: kibana-secret-settings
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    use-http01-solver: "true"
  name: kibana-ingress
  namespace: elasticsearch
spec:
  ingressClassName: nginx
  rules:
    - host: "laz.dzervas.gr"
      http:
        paths:
          - path: /kibana(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: kibana-kb-http
                port:
                  number: 5601
  tls:
    - hosts:
        - laz.dzervas.gr
      secretName: laz-dzervas-gr-cert
---

# https://raw.githubusercontent.com/elastic/cloud-on-k8s/1.4/config/recipes/beats/filebeat_autodiscover.yaml
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat-cluster
spec:
  type: filebeat
  version: 7.14.2
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  config:
    filebeat:
      autodiscover:
        providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.default_config.enabled: "false"
          templates:
            - condition.equals.kubernetes.namespace: ingress
              config:
              - module: nginx
                ingress_controller:
                  enabled: true
                  input:
                    type: container
                    paths:
                    - /var/log/containers/*${data.kubernetes.container.id}.log
            - condition.equals.kubernetes.labels.logme: "true"
              config:
              - type: container
                paths:
                - /var/log/containers/*${data.kubernetes.container.id}.log
    processors:
    - add_cloud_metadata: {}
    - add_host_metadata: {}
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            #privileged: true
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  - nodes
  - nodes/stats
  verbs:
  - get
  - watch
  - list
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: elasticsearch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elasticsearch
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
