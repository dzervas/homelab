---
# Optional variables:
# - zerotier_identity: (bool) Get the zerotier identity from terraform
# - k3s_init: (bool) Initialize the k3s cluster (should be used if agent-token does not exist)

- name: Gather Terraform outputs
  hosts: localhost
  gather_facts: false
  tags: zerotier
  tasks:
    - name: Gather Terraform outputs
      terraform:
        project_path: ../tf
        state: planned
        workspace: homelab-k8s
        plan_file: /dev/null
        targets:
          - output.zerotier_identities
      register: terraform_state
      when:
        - zerotier_identity is defined
        - zerotier_identity

    - name: Set ZeroTier identity as fact
      set_fact:
        zerotier_identities: "{{ terraform_state.outputs.zerotier_identities.value }}"
      when:
        - zerotier_identity is defined
        - zerotier_identity

- name: Fetch 1Password secrets
  hosts: localhost
  gather_facts: false
  tags:
    - k3s
    - k3s-registry
  tasks:
    - name: Set 1Password vault
      set_fact:
        op_vault: "{{ lookup('env', 'TF_VAR_op_vault') }}"

    - name: Set 1Password secrets as facts
      set_fact:
        ghcr_username: "{{ lookup('community.general.onepassword', 'homelab-ansible', field='ghcr_username', vault=op_vault) }}"
        ghcr_token: "{{  lookup('community.general.onepassword', 'homelab-ansible', field='ghcr_token', vault=op_vault)  }}"

- hosts: all
  gather_facts: true
  vars:
    wireguard_subnet: "10.11.12.0/24"
    zerotier_subnet: "10.9.8.0/24"
    update: no
  tags:
    - zerotier
    - k3s
  tasks:
    - name: Calculate VPN addresses
      set_fact:
        wireguard_ip: "{{ wireguard_subnet | ansible.utils.ipaddr(host_index) | ansible.utils.ipaddr('address') }}"
        zerotier_ip: "{{ zerotier_subnet | ansible.utils.ipaddr(host_index) | ansible.utils.ipaddr('address') }}"
        address: "{{ lookup('dig', inventory_hostname, '@1.1.1.1') }}"

    - name: Set ZeroTier identity
      set_fact:
        zerotier_identity: "{{ hostvars['localhost'].zerotier_identities[inventory_hostname] }}"
      when:
        - hostvars['localhost'].zerotier_identities is defined
        - inventory_hostname in hostvars['localhost'].zerotier_identities

    - name: Node VPN IPs
      debug:
        msg: "{{ inventory_hostname }} External: {{ hostvars[inventory_hostname].address }} WG: {{ hostvars[inventory_hostname].wireguard_ip }} ZT: {{ hostvars[inventory_hostname].zerotier_ip }}"

    - name: Set additional_ips and k3s_ip
      set_fact:
        k3s_ip: "{{ hostvars[inventory_hostname].wireguard_ip }}"
        additional_ips: "{{ ansible_all_ipv4_addresses + [hostvars[inventory_hostname].wireguard_ip, hostvars[inventory_hostname].zerotier_ip] | unique | difference([hostvars[inventory_hostname].address]) }}"

- hosts: all
  become: true
  vars:
    k3s_iface: "ztrfyoirbv"
    k3s_version: "1.31.5+k3s1"
    zerotier_network_id: "{{ lookup('env', 'TF_VAR_zerotier_network_id') }}"
    fail2ban_ignoreips:
      - "127.0.0.1/8"
      - "10.9.8.0/24"
      - "10.11.12.0/24"
  roles:
    - role: system
      tags: system
    - role: robertdebock.fail2ban
      tags: fail2ban
    - role: zerotier
      tags: zerotier
    - role: k3s
      tags: k3s
