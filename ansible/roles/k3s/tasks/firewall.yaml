---
- name: Allow k3s traffic
  ufw:
    rule: allow
    proto: "{{ item.protocol }}"
    port: "{{ item.port }}"
    interface: "{{ k3s_iface }}"
    direction: in
  loop:
    - port: "2379" # ETCD server
      protocol: tcp
    - port: "2380" # ETCD server
      protocol: tcp
    - port: "6443" # API server
      protocol: tcp
    - port: "8472" # Flannel VXLAN
      protocol: udp
    - port: "10250" # Kubelet API
      protocol: tcp
    - port: "10251" # kube-scheduler
      protocol: tcp
  register: ufw_result
  until: ufw_result is succeeded
  retries: 5
  delay: 2

- name: Allow pod & service traffic
  ufw:
    rule: allow
    from: "{{ item }}"
    to: any
  loop:
    - 10.42.0.0/16
    - 10.43.0.0/16
  register: ufw_result
  until: ufw_result is succeeded
  retries: 5
  delay: 2

- name: Allow pod & service routing through k3s interface
  ufw:
    rule: allow
    from: "{{ item }}"
    interface_in: "{{ k3s_iface }}"
    route: true
  loop:
    - 10.42.0.0/16
    - 10.43.0.0/16
  register: ufw_result
  until: ufw_result is succeeded
  retries: 5
  delay: 2

- name: Allow ingress traffic
  ufw:
    rule: allow
    proto: tcp
    port: "{{ item }}"
  loop:
    - "80"
    - "443"
    - "2222"
    - "25565"
  register: ufw_result
  until: ufw_result is succeeded
  retries: 5
  delay: 2

- name: Allow ingress traffic (UDP)
  ufw:
    rule: allow
    proto: udp
    port: "25565"
  register: ufw_result_udp
  until: ufw_result_udp is succeeded
  retries: 5
  delay: 2
# - name: Fetch GitHub Actions IP ranges
#   uri:
#     url: "https://api.github.com/meta"
#     return_content: yes
#   register: github_meta
#   until: github_meta is succeeded
#   retries: 5
#   delay: 2
# - name: Allow GitHub Actions IPs through UFW for HTTPS
#   ufw:
#     rule: allow
#     to_port: 6443
#     from_ip: "{{ item }}"
#     proto: tcp
#   loop: "{{ github_meta.json.actions }}"
#   register: ufw_result
#   until: ufw_result is succeeded
#   retries: 5
#   delay: 2
